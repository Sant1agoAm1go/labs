#include <stdio.h>
#include <stdlib.h>
#include <readline/readline.h>
#define DELIM " \t"
#define PROMPT "> "

/*void rem(char **str) {
	int len = strlen(*str);
	
	if ((*str)[0] == ' ') {
		for (int i = 0; i < len-1; i++){
			(*str)[i] = (*str)[i+1];
		}
		*str = (char*) realloc(*str, (len-1)*sizeof(char));
	}
	
	if ((*str)[len-1] == ' '){
		for (int i = len-2; i < len-1; i++){
           (*str)[i] = (*str)[i+1];
		}
		*str = (char*) realloc(*str, (len-1)*sizeof(char));
	}
}*/
int check(char *str){
	int len = strlen(str), num = 0, res = 0, k = 1;
	for (int i = 0; i < len; i++){
		if (str[i] >= '0' && str[i] <='9') {
			num = num*10 + str[i] - '0';
		}
		else {
			if (num!=0) {
				res = res + num * k;
				num = 0; 
				
			}
			if (str[i] == '+') {
				k = 1;
			}
			else if (str[i] == '-') {
				k = -1;
			}
		 
		}
	}
	printf("%d\n",res);
	return res+num*k;
}
char *result(const char *str) {
	char *s = strdup(str);
	int s_len = strlen(s);
	char *r = calloc(s_len + 1, sizeof(char));
	int len = 0;
	char *word = strtok(s, DELIM);
	while (word != NULL) {
		int w_len = strlen(word);
		if(w_len > 0) {
			memcpy(r+len, word, w_len * sizeof(char));
			len += w_len;
			r[len] = ' ';
			++len;		
		} 
		word  = strtok(NULL, DELIM);
	} 
	free(s);
	if (len > 0) {
		--len;
	} 
	len+=3;
	r = realloc(r, (len+1)*sizeof(char));
	//*sthar *) realloc(*str2, (len+1)*sizeof(char));

	r[len] = '\0';
	r[len-3] = ' ';
	r[len-2] = '=';
	r[len-1] = ' ';
	//r[len] = '\0';
	int res = check(r);
	int count = 0;
	if (res == 0){
		count = 1;
	}
	if (res < 0) {
		res*=-1;
	}
	while(res > 0){
		count++;
		res/=10;
		
	} 
	res = check(r);
	int add = 0;
	if (res < 0) {
		 res *=-1; 
		 len+=count+1;
		 r = (char *) realloc(r, (len+1)*sizeof(char));
		 r[len-count-1] = '-';
		 for(int i = 0; i < count; i++) {
		 	 add = res%10;
		 	 r[len-(i+1)] = add + '0';
		 	 res/=10;
		 }  
		 r[len] = '\0';
	}
	else {
		len+=count; 
		r = (char *) realloc(r, (len+1)*sizeof(char));
		for(int i = 0; i < count; i++) {
			add = res%10; 
			r[len-(i+1)] = add + '0';
			res/=10;
		}
		r[len] = '\0'; 
	}
	return r;
}
int main() {
	while(1) {
		char *str = readline(PROMPT);
		if (str == NULL) {
			break;
		} 
		else { 
			int len = strlen(str);
			printf("%d\n", len);
			char *res = result(str); 
			printf("\"%s\"\n",str);
			printf("\"%s\"\n", res);
			len = strlen(res); 
			printf("%d\n", len);
			free(str);
			free(res);
		}
	}
	return 0;
}
